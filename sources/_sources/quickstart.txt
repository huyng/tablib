.. _quickstart:

Quickstart
==========

Eager to get started? This page gives a good introduction in how to get started with Tablib. This assumes you already have Tablib installed. If you do not, head over to the :ref:`Installation <install>` section.

First, make sure that:

* Tablib is :ref:`installed <install>`
* Tablib is :ref:`up-to-date <updates>`



Basic Usage
-----------

Lets gets started with some simple use cases and examples.

Creating a Dataset
++++++++++++++++++

A :class:`Dataset <tablib.Dataset>` is nothing more than what it's name impliesâ€”a set of data.

Creating your own instance of the :class:`tablib.Dataset` object is simple. ::

    data = tablib.Dataset()
    
You can now start filling this :class:`Dataset <tablib.Dataset>` object with data.

.. admonition:: Example Context
     
     From here on out, if you see ``data``, assume that it's a fresh :class:`Dataset <tablib.Dataset>` object.

Adding Rows
+++++++++++

::

    data.append([1,2,3])

Adding Headers
++++++++++++++

::

    data.headers = [1,2,3]
Adding Columns
++++++++++++++

Selecting Rows
++++++++++++++

Selecting Columns
+++++++++++++++++

::

    data['Header Name']





Advanced Usage
--------------

Dynamic Columns
+++++++++++++++


.. _seperators:
Seperators
++++++++++


Transposition
+++++++++++++

::

    data.transpose()


Shortcuts
+++++++++

Population upon instantiation.


Now, go check out the :ref:`API Documentation <api>` or begin :ref:`Tablib Development <development>`.